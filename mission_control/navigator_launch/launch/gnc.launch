<launch>
    <arg name="gps" default="True" />

    <node pkg="navigator_thrust_mapper" type="thrust_mapper.py" name="thrust_mapper">
    <!-- Parameters used to set the thruster locations and angles relative to the center of gravity of the boat -->
        <rosparam param="thruster_BL_cog">[-1.9304, 1.016]</rosparam>
        <rosparam param="thruster_BR_cog">[-1.9304, -1.016]</rosparam>
        <rosparam param="thruster_FL_cog">[1.5748, 0.6096]</rosparam>
        <rosparam param="thruster_FR_cog">[1.5748, -0.6096]</rosparam>
        <rosparam param="thruster_BL_theta">0.785398</rosparam> <!-- +/- 45 degrees -->
        <rosparam param="thruster_BR_theta">-0.785398</rosparam>
        <rosparam param="thruster_FL_theta">-0.785398</rosparam>
        <rosparam param="thruster_FR_theta">0.785398</rosparam>
        <rosparam param="effort_ratio">1.35</rosparam><!-- map 220 newtons to 300 effort units -->
        <rosparam param="effort_limit">400</rosparam>
    </node>

    <include file="$(find navigator_launch)/launch/subsystems/tf.launch"/>


    <node name="wrench_arbiter" ns="/wrench" pkg="topic_tools" type="mux"
          args="cmd cmd autonomous rc emergency keyboard" >
        <remap from="mux" to="/wrench" />
    </node>

    <node name="mrac" pkg="navigator_controller" type="mrac_controller.py" output="screen" />

    <node pkg="navigator_joystick_control" type="navigator_joystick.py" name="joystick_wrench" output="screen">
        <param name="force_scale" value="600" type="double"/>
        <param name="torque_scale" value="500" type="double"/>
    </node>

    <node pkg="navigator_keyboard_control" type="navigator_keyboard_server.py" name="keyboard_server" output="screen"/>

    <node pkg="navigator_tools" type="boat_info.py" name="boat_info_markers" />

    <include file="$(find navigator_launch)/launch/subsystems/object_classification.launch" />

    <!-- Run Path Planner -->
    <include file="$(find navigator_launch)/launch/subsystems/path_planner.launch" />

    <!-- Core utilities: bounds, coordinate conversion -->
    <node name="coordinate_converter" pkg="navigator_tools" type="coordinate_conversion_server.py"/>
    <node name="bounds_server" pkg="navigator_tools" type="bounds.py"/>
    <node name="rviz_repub" pkg="mil_tools" type="rviz_waypoint.py"/>
    <node name="set_bounds" pkg="dynamic_reconfigure" type="dynparam" args="load /bounds_server $(find navigator_tools)/cfg/wauberg.yaml -t 10" />

    <!-- Connect to GPS device -->
    <include if="$(arg gps)" file="$(find navigator_launch)/launch/subsystems/gps.launch" />
</launch>
