/*
 * Author: Konstantin Schauwecker
 * Year:   2012
 */

#ifndef SPARSESTEREO_FAST9_H
#define SPARSESTEREO_FAST9_H

namespace sparsestereo {
	// Some functions of FAST9 used by other classes
	template <typename T>
	class FAST9 {
	public:
		// Pixel offsets used
		int pixel[16];
	
		FAST9();
	
		// Sets the image row step width
		void setStep(int step);
		// Performs non-maximum suppression
		template <typename T2>
		void nonMaxSuppression(const std::vector<cv::Point2i>& corners, const std::vector<T2>& scores, std::vector<int>& ret_nonmax) const;
		
		// Autogenerated scoring method
		int cornerScore(const T* p, T c, int bstart) const;
		// Autogenerated cornet test method
		__always_inline int cornerTest(const T* p, T c, unsigned char b) const;
		
	private:
		static const int pixelOffsetsX[16];
		static const int pixelOffsetsY[16];
		int step;
	};
}

#endif
