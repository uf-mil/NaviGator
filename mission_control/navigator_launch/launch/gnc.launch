<launch>
    <node pkg="navigator_thrust_mapper" type="thrust_mapper.py" name="thrust_mapper">
    <!-- Parameters used to set the thruster locations and angles relative to the center of gravity of the boat -->
        <rosparam param="thruster_BL_cog">[-1.9304, 1.016]</rosparam>
        <rosparam param="thruster_BR_cog">[-1.9304, -1.016]</rosparam>
        <rosparam param="thruster_FL_cog">[1.5748, 0.6096]</rosparam>
        <rosparam param="thruster_FR_cog">[1.5748, -0.6096]</rosparam>
        <rosparam param="thruster_BL_theta">0.785398</rosparam> <!-- +/- 45 degrees -->
        <rosparam param="thruster_BR_theta">-0.785398</rosparam>
        <rosparam param="thruster_FL_theta">-0.785398</rosparam>
        <rosparam param="thruster_FR_theta">0.785398</rosparam>
        <rosparam param="effort_ratio">1.35</rosparam><!-- map 220 newtons to 300 effort units -->
        <rosparam param="effort_limit">400</rosparam>
    </node>

    <include file="$(find navigator_launch)/launch/subsystems/tf.launch"/>

    <node name="wrench_arbiter" pkg="navigator_msg_multiplexer" type="wrench_arbiter.py"/>

    <node name="mrac" pkg="navigator_controller" type="mrac_controller.py"/>

    <node pkg="navigator_joystick_control" type="navigator_joystick.py" name="joystick_wrench" output="screen">
        <param name="force_scale" value="600" type="double"/>
        <param name="torque_scale" value="500" type="double"/>
    </node>

    <node pkg="navigator_emergency_controller" type="navigator_emergency.py" name="emergency_wrench" output="screen"/>

    <node pkg="navigator_keyboard_control" type="navigator_keyboard_server.py" name="keyboard_server" output="screen"/>

    <node pkg="navigator_tools" type="boat_info.py" name="boat_info_markers" />

    <include file="$(find navigator_launch)/launch/subsystems/object_classification.launch" />

    <!-- Legacy - should be phased out -->
    <node pkg="kill_handling" type="kill_master" name="kill_master"/>

</launch>
