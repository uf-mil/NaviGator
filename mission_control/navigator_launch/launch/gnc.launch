
<!--
        This file launches all nodes necessary for navigation.
        Nodes launched:
            * thruster mapper
            * pose_controller
            * sdgps_solution_ros_bridge
            * wrench_arbiter
            * joystick_wrench
            * joy_node
            * ins_tf
            * lidar_tf
            * forward_camera_tf

        It takes in twp parameters
        * 'sim' to launch only certain nodes.
        * 'rc' to decide whether to launch the xbox remote control nodes

        Nodes affected by the 'sim' arg:
            * sdgps_solution_ros_bridge

        Nodes affected by the 'rc' arg:
            * joystick_wrench
            * joy_node

-->

<launch>

    <arg name="sim" default="true" />
    <arg name="rc" default="true" />

    <node pkg="navigator_thrust_mapper" type="thrust_mapper.py" name="thrust_mapper">
    <!-- Parameters used to set the thruster locations and angles relative to the center of gravity of the boat -->
        <rosparam param="thruster_BL_cog">[-1.9304, 1.016]</rosparam>
        <rosparam param="thruster_BR_cog">[-1.9304, -1.016]</rosparam>
        <rosparam param="thruster_FL_cog">[1.5748, 0.6096]</rosparam>
        <rosparam param="thruster_FR_cog">[1.5748, -0.6096]</rosparam>
        <rosparam param="thruster_BL_theta">45</rosparam>
        <rosparam param="thruster_BR_theta">-45</rosparam>
        <rosparam param="thruster_FL_theta">-45</rosparam>
        <rosparam param="thruster_FR_theta">45</rosparam>
        <rosparam param="effort_ratio">2.7</rosparam><!-- map 220 newtons to 600 effort units -->
        <rosparam param="effort_limit">600</rosparam>
    </node>

    <node name="wrench_arbiter" pkg="navigator_msg_multiplexer" type="wrench_arbiter.py"/>

    <node name="pose_controller" pkg="navigator_controller" type="mrac_controller.py"/>

    <node if="$(arg rc)" pkg="navigator_joystick_control" type="navigator_joystick.py" name="joystick_wrench">
        <param name="force_scale" value="600" type="double"/>
        <param name="torque_scale" value="500" type="double"/>
    </node>

    <node if="$(arg rc)" respawn="true" pkg="xbox_joy_node" type="joy_node" name="joy_node">
        <param name="dev" type="string" value="/dev/input/by-id/usb-045e_0291-joystick" />
        <param name="deadzone" value="0.12" />
        <param name="autorepeat_rate" value="5"/>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="ins_tf" args=".37084 .0.05715 .7493  0 0 0 1  /base_link /ins 100"/>
    <node pkg="tf" type="static_transform_publisher" name="lidar_tf" args=".5334 0.0127 .7493  0 0 0 1  /base_link /lidar 100" />
    <node pkg="tf" type="static_transform_publisher" name="forward_camera_tf" args=".6096 -.254 .762  0 0 0 1  /base_link /camera 100" />

    <node name="move_helper" pkg="navigator_tools" type="move_helper.py"/>


</launch>
